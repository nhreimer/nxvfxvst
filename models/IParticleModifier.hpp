#pragma once

namespace nx
{
  struct IParticleModifier : public ISerializable< E_ModifierType >
  {
    ~IParticleModifier() override = default;

    virtual void drawMenu() = 0;

    virtual void update( const sf::Time& deltaTime ) = 0;

    virtual bool isActive() const = 0;

    virtual void processMidiEvent( const Midi_t& midiEvent ) = 0;

    /// @param blendMode blend mode for particle layers
    /// @param particles particles generated by IParticleLayout
    /// @param outArtifacts Ownership is handed off. do NOT manage memory. artifacts are ephemeral.
    virtual void modify(
       const sf::BlendMode& blendMode,
       std::deque< IParticle* >& particles,
       std::deque< sf::Drawable* >& outArtifacts ) = 0;
  };
}